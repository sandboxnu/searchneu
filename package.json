{
  "name": "searchneu",
  "version": "1.0.9",
  "scripts": {
    "-development-": "--------development--------",
    "babel-node-ts": "babel-node --extensions '.js,.jsx,.ts,.tsx'",
    "start": "./node_modules/.bin/cross-env NODE_ENV=dev yarn babel-node-ts backend/server.ts",
    "scrape": "yarn babel-node-ts --max_old_space_size=12000 backend/scrapers/main.js",
    "resetIndex": "yarn babel-node-ts backend/script/resetIndex.js",
    "populateES": "yarn babel-node-ts backend/script/populateES.ts",
    "script": "cd $INIT_CWD; babel-node --extensions \".js,.jsx,.ts,.tsx\" --root-mode upward --ignore \".this_does_not_exit\"",
    "inspect": "cd $INIT_CWD;echo 'Open chrome://inspect in chrome and hit the node button';yarn -s script -- --inspect-brk",
    "dev:docker": "docker-compose -f infrastructure/dev/docker-compose.yml up -d",
    "dev:docker:del": "docker-compose -f infrastructure/dev/docker-compose.yml down -v",
    "db:save": "npx prisma migrate save --experimental",
    "db:migrate": "npx prisma migrate up --experimental",
    "db:refresh": "npx prisma generate",
    "db:rollback": "npx prisma migrate down --experimental",
    "-linting-": "--------linting--------",
    "lintjs": "node ./node_modules/eslint/bin/eslint.js --ext .js,.jsx,.ts,.tsx backend/ common/ frontend/",
    "fixjs": "node ./node_modules/eslint/bin/eslint.js --ext .js,.jsx,.ts,.tsx backend/ common/ frontend/ --fix",
    "lintjsdiff": "node ./node_modules/eslint/bin/eslint.js $(git diff --diff-filter=AM --name-only HEAD | grep .js\\$)",
    "lintstyle": "./node_modules/.bin/stylelint \"frontend/**/*.scss\"",
    "fixstyle": "./node_modules/.bin/stylelint \"frontend/**/*.scss\" --fix",
    "lint": "yarn -s lintjs;yarn -s lintstyle;",
    "fix": "yarn -s fixjs;yarn -s fixstyle",
    "tsc": "tsc",
    "-testing-": "--------testing--------",
    "test": "./node_modules/jest-cli/bin/jest.js --testPathIgnorePatterns='(seq|reg).[jt]s'",
    "regtest": "jest --projects regtests",
    "dbtest": "jest -i --projects backend/tests/",
    "prodtest": "PROD=true jest reg.[jt]s",
    "coverage": "./node_modules/jest-cli/bin/jest.js --coverage",
    "-building-": "--------building--------",
    "build_frontend": "mkdir -p public; cp frontend/static/* public/; ./node_modules/.bin/cross-env NODE_ENV=prod yarn babel-node-ts ./node_modules/webpack/bin/webpack.js --config ./backend/webpack.config.babel.ts --colors",
    "build_backend": "mkdir -p dist; mkdir -p dist/backend; babel --extensions '.js,.ts' backend -d dist/backend --copy-files; babel --extensions '.js,.ts' common -d dist/common",
    "build": "yarn -s build_backend; yarn -s build_frontend",
    "-deployment-": "--------deployment--------",
    "prod:scrape": "node dist/backend/scrapers/main.js",
    "prod:start": "node dist/backend/server.js",
    "prod:start:updater": "node dist/backend/updater.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/sandboxnu/searchneu.git"
  },
  "babel": {
    "presets": [
      [
        "@babel/preset-env",
        {
          "targets": {
            "node": "12.16"
          }
        }
      ],
      "@babel/preset-react",
      "@babel/preset-typescript"
    ],
    "plugins": [
      "@babel/plugin-proposal-class-properties",
      "react-hot-loader/babel"
    ],
    "ignore": [
      "node_modules"
    ]
  },
  "stylelint": {
    "extends": "stylelint-config-standard"
  },
  "main": "dist/backend/scrapers/main.js",
  "_comment": "domutils upgrade is faster for parsing html (stack instead of recursive) but requires some code changes. Shoudn't be too bad.",
  "_comment2": "Async adds about 30k to the final bundled output. There are smaller libraries that can also do async.retry (only thing that is being used in async)",
  "_comment3": "but that is only about 3% of the final JS size.",
  "dependencies": {
    "@babel/core": "^7.10.2",
    "@babel/node": "^7.0.0",
    "@babel/plugin-proposal-class-properties": "^7.8.3",
    "@babel/plugin-transform-arrow-functions": "^7.2.0",
    "@babel/register": "^7.0.0",
    "@babel/runtime": "^7.0.0",
    "@elastic/elasticsearch": "^7.0.0-rc.2",
    "@prisma/client": "2.7.0-dev.40",
    "@types/history": "^4.7.6",
    "@types/react-router": "^5.1.8",
    "amplitude": "^4.0.1",
    "apollo-server": "^2.9.5",
    "apollo-server-express": "^2.9.7",
    "apollo-server-testing": "^2.9.6",
    "async-retry": "^1.3.1",
    "atob": "^2.0.3",
    "axios": "^0.19.2",
    "babel-core": "^7.0.0-bridge.0",
    "body-parser": "^1.17.2",
    "cheerio": "^0.22.0",
    "classnames": "^2.2.5",
    "compression": "^1.6.2",
    "cookie": "^0.4.0",
    "core-js": "^3.0.1",
    "cross-env": "^5.0.0",
    "dnscache": "^1.0.1",
    "domutils": "^1.6.2",
    "dotenv": "^8.2.0",
    "enzyme": "^3.2.0",
    "enzyme-adapter-react-16": "^1.1.0",
    "express": "^4.15.2",
    "express-x-hub": "^1.0.4",
    "file-loader": "^4.0.0",
    "friendly-errors-webpack-plugin": "^1.7.0",
    "fs-extra": "^8.0.0",
    "graphql": "^14.6.0",
    "graphql-type-json": "^0.3.0",
    "he": "^1.2.0",
    "history": "^5.0.0",
    "html-webpack-plugin": "^3.0.6",
    "htmlparser2": "^3",
    "identity-obj-proxy": "^3.0.0",
    "is-mobile": "^2.0.0",
    "jest": "^24.8.0",
    "jest-environment-node": "^26.3.0",
    "json": "^9.0.6",
    "lodash": "^4.17.4",
    "mock-local-storage": "^1.0.5",
    "mockdate": "^2.0.1",
    "moment": "^2.19.3",
    "msgpack5": "^4.0.0",
    "node-graceful-shutdown": "^1.0.5",
    "node-notifier": "^5.2.1",
    "object-hash": "^1.1.7",
    "p-map": "^3.0.0",
    "pg": "^7.12.1",
    "pg-hstore": "^2.3.3",
    "prop-types": "^15.5.8",
    "randomstring": "^1.1.5",
    "react": "^16.13.0",
    "react-collapsible": "^2.6.0",
    "react-dom": "^16.1.1",
    "react-hot-loader": "^4.0.0",
    "react-infinite-scroll-component": "^5.0.4",
    "react-router-dom": "^5.1.2",
    "react-test-renderer": "^16.1.1",
    "react-tooltip": "^3.2.6",
    "react-transition-group": "^4.0.1",
    "regenerator-runtime": "^0.13.2",
    "request": "^2.81.0",
    "request-promise-native": "^1.0.3",
    "resolve-url-loader": "^3.0.0",
    "rollbar": "^2.19.4",
    "sass-loader": "^7.0.1",
    "semantic-ui-css": "^2.2.4",
    "semantic-ui-react": "^0.87.1",
    "strip-ansi": "^5.0.0",
    "urijs": "^1.18.8",
    "use-deep-compare-effect": "^1.3.1",
    "use-query-params": "^0.6.0",
    "uuid": "^8.3.0",
    "webpack": "^4.1.0",
    "webpack-cli": "^3.0.1",
    "webpack-dev-middleware": "^3.0.1",
    "webpack-hot-middleware": "^2.16.1",
    "whois": "^2.3.9",
    "xmldom": "^0.1.27"
  },
  "devDependencies": {
    "@babel/cli": "^7.10.1",
    "@babel/plugin-proposal-decorators": "^7.0.0",
    "@babel/plugin-proposal-do-expressions": "^7.0.0",
    "@babel/plugin-proposal-export-default-from": "^7.0.0",
    "@babel/plugin-proposal-export-namespace-from": "^7.0.0",
    "@babel/plugin-proposal-function-sent": "^7.0.0",
    "@babel/plugin-proposal-json-strings": "^7.0.0",
    "@babel/plugin-proposal-logical-assignment-operators": "^7.0.0",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.0.0",
    "@babel/plugin-proposal-numeric-separator": "^7.0.0",
    "@babel/plugin-proposal-optional-chaining": "^7.0.0",
    "@babel/plugin-proposal-pipeline-operator": "^7.0.0",
    "@babel/plugin-proposal-throw-expressions": "^7.0.0",
    "@babel/plugin-syntax-dynamic-import": "^7.0.0",
    "@babel/plugin-syntax-import-meta": "^7.0.0",
    "@babel/preset-env": "^7.0.0",
    "@babel/preset-react": "^7.0.0",
    "@babel/preset-typescript": "^7.8.3",
    "@prisma/cli": "2.7.0-dev.40",
    "@types/atob": "^2.1.2",
    "@types/jest": "^25.1.4",
    "@types/lodash": "^4.14.150",
    "@types/node": "^13.9.0",
    "@types/react": "^16.9.23",
    "@types/react-dom": "^16.9.5",
    "@types/react-router-dom": "^5.1.3",
    "@types/webpack": "^4.41.8",
    "@typescript-eslint/eslint-plugin": "^2.23.0",
    "@typescript-eslint/parser": "^2.23.0",
    "babel-eslint": "^10.0.1",
    "babel-jest": "^24.8.0",
    "babel-loader": "^8.0.4",
    "coveralls": "^3.0.6",
    "css-loader": "^3.0.0",
    "enzyme-to-json": "^3.3.5",
    "eslint": "^6.8.0",
    "eslint-config-airbnb": "^18.0.1",
    "eslint-config-airbnb-typescript": "^7.0.0",
    "eslint-import-resolver-typescript": "^2.0.0",
    "eslint-loader": "^2.0.0",
    "eslint-plugin-babel": "^5.1.0",
    "eslint-plugin-import": "^2.20.1",
    "eslint-plugin-jsx-a11y": "^6.2.3",
    "eslint-plugin-promise": "^4.0.1",
    "eslint-plugin-react": "^7.19.0",
    "eslint-plugin-react-hooks": "^1.7.0",
    "ignore-styles": "^5.0.1",
    "node-sass": "^4.9.2",
    "source-map-loader": "^0.2.4",
    "style-loader": "^1.0.0",
    "stylelint": "^10.0.1",
    "stylelint-config-standard": "^18.2.0",
    "typescript": "^3.8.3"
  },
  "jest": {
    "snapshotSerializers": [
      "enzyme-to-json/serializer"
    ],
    "testURL": "http://localhost/",
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/dist/"
    ],
    "setupFiles": [
      "./common/jestSetupFile.js"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/common/teardown.ts"
    ],
    "moduleFileExtensions": [
      "js",
      "jsx",
      "json",
      "node",
      "tsx",
      "ts"
    ],
    "testMatch": [
      "**/__tests__/**/*.[jt]s?(x)",
      "**/?(*.)(spec|test).[jt]s?(x)"
    ],
    "moduleNameMapper": {
      "__comment": "The css import needs to be an object that returns a string",
      "__comment2": "but the svg and png imports need to be string themselves.",
      "\\.(css|less|scss)$": "identity-obj-proxy",
      "\\.(svg|png)$": "<rootDir>/frontend/components/tests/exportsAString.js"
    }
  }
}

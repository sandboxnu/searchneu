generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model Course {
  classAttributes String[]         @map(name: "class_attributes")
  classId         String?          @map(name: "class_id")
  college         String?
  coreqs          Json?
  description     String?
  feeAmount       Int?             @map(name: "fee_amount")
  feeDescription  String?          @map(name: "fee_description")
  host            String?
  id              String           @id
  lastUpdateTime  DateTime?        @map(name: "last_update_time")
  maxCredits      Int?             @map(name: "max_credits")
  minCredits      Int?             @map(name: "min_credits")
  name            String?
  nupath          String[]
  optPrereqsFor   Json?            @map(name: "opt_prereqs_for")
  prereqs         Json?
  prereqsFor      Json?            @map(name: "prereqs_for")
  prettyUrl       String?          @map(name: "pretty_url")
  subject         String?
  termId          String?          @map(name: "term_id")
  url             String?
  followedCourses FollowedCourse[] // @map(name: "followed_courses") NOT SURE ABOUT THIS ONE
  sections        Section[]

  @@map(name: "courses")
  @@unique([classId, termId, subject], name: "uniqueCourseProps")
}

model FollowedCourse {
  courseId  String  @map(name: "course_id")
  userId    String  @map(name: "user_id")
  course    Course  @relation(fields: [courseId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@map(name: "followed_courses")
  @@id([userId, courseId])
}

model FollowedSection {
  sectionId String   @map(name: "section_id")
  userId    String   @map(name: "user_id")
  section   Section  @relation(fields: [sectionId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@map(name: "followed_sections")
  @@id([userId, sectionId])
}

model Major {
  catalogYear  String? @map(name: "catalog_year")
  id           Int     @default(autoincrement()) @id
  majorId      String? @map(name: "major_id")
  name         String?
  plansOfStudy Json?   @map(name: "plans_of_study")
  requirements Json?

  @@map(name: "majors")
}

model Professor {
  bigPictureUrl     String?  @map(name: "big_picture_url")
  email             String?
  emails            String[]
  firstName         String?  @map(name: "first_name")
  googleScholarId   String?  @map(name: "google_scholar_id")
  id                String   @id
  lastName          String?  @map(name: "last_name")
  link              String?
  name              String?
  officeRoom        String?  @map(name: "office_room")
  personalSite      String?  @map(name: "personal_site")
  phone             String?
  pic               Json?
  primaryDepartment String?  @map(name: "primary_department")
  primaryRole       String?  @map(name: "primary_role")
  streetAddress     String?  @map(name: "street_address")
  url               String?

  @@map(name: "professors")
}

model Section {
  classHash        String?           @map(name: "class_hash")
  classType        String?           @map(name: "class_type")
  crn              String?
  honors           Boolean?
  id               String            @id
  info             String?
  meetings         Json?
  campus           String?
  profs            String[]
  seatsCapacity    Int?              @map(name: "seats_capacity")
  seatsRemaining   Int?              @map(name: "seats_remaining")
  url              String?
  waitCapacity     Int?              @map(name: "wait_capacity")
  waitRemaining    Int?              @map(name: "wait_remaining")
  course           Course?           @relation(fields: [classHash], references: [id])
  followedSections FollowedSection[]

  @@map(name: "sections")
}

model User {
  facebookPageId   String?           @map(name: "facebook_page_id")
  firstName        String?           @map(name: "first_name")
  id               String            @id
  lastName         String?           @map(name: "last_name")
  loginKeys        String[]          @map(name: "login_keys")
  followedCourses  FollowedCourse[]
  followedSections FollowedSection[]

  @@map(name: "users")
}

